<?php

declare(strict_types=1);

use Drupal\Core\Template\Attribute;
use Drupal\Core\Url;


/**
 * @file
 * Functions to support theming in the voltahall theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function voltahall_preprocess_html(array &$variables): void {

}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function voltahall_preprocess_page(array &$variables): void {
    $variables['breadcrumb'] = \Drupal::service('breadcrumb')->build(\Drupal::routeMatch())->toRenderable();

    $today = strtolower(date('Y'));
    $variables['calendar_year'] = $today;
}

function voltahall_theme_suggestions_page_alter(array &$suggestions, array $variables){
  if ($node = \Drupal::routeMatch()->getParameter('node')){
    $suggestions[] = 'page__' . $node->bundle();
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for menu templates.
 */
function voltahall_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
  // Check if we are on the front page.
  $current_path = \Drupal::service('path.current')->getPath();
  $front_path = \Drupal::config('system.site')->get('page.front');

  if ($current_path === $front_path) {
    // Example: if rendering the main menu, add a special template suggestion.
    if (isset($variables['menu_name']) && $variables['menu_name'] === 'main') {
      // Add a custom Twig suggestion, e.g. menu--main--front.html.twig.
      $suggestions[] = 'menu__main__front';
    }
  }
}


/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function voltahall_preprocess_node(array &$variables): void {
    $variables['breadcrumb'] = \Drupal::service('breadcrumb')->build(\Drupal::routeMatch())->toRenderable();
}

function voltahall_preprocess_block(array &$variables): void{
  
}


function voltahall_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__type__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

function voltahall_preprocess_layout(array &$variables) {
  $layout = $variables['layout'];

  $row_class = "row";
  $variables['row_class'] = $row_class;

  if ($layout instanceof \Drupal\Core\Layout\LayoutDefinition) {
    // Get the layout machine ID.
    if ($layout->id() === 'layout_twocol_section') {
      // $variables['attributes'] = new Attribute(['class' => ['row']]);

      
      if (isset($variables['attributes']) && $variables['attributes'] instanceof \Drupal\Core\Template\Attribute) {
        $variables['attributes']->removeClass('layout--twocol-section');
      }

      
      switch ($variables['settings']['column_widths']) {
        case '50-50':
          $variables['region_attributes']['first']->addClass('col-md-6');
          $variables['region_attributes']['second']->addClass('col-md-6');
          break;
        case '33-67':
          $variables['region_attributes']['first']->addClass('col-md-4');
          $variables['region_attributes']['second']->addClass('col-md-8');
          break;
        case '67-33':
          $variables['region_attributes']['first']->addClass('col-md-8');
          $variables['region_attributes']['second']->addClass('col-md-4');
          break;
        case '25-75':
          $variables['region_attributes']['first']->addClass('col-md-3');
          $variables['region_attributes']['second']->addClass('col-md-9');
          break;
        default:
          $variables['region_attributes']['first']->addClass('col-md-9');
          $variables['region_attributes']['second']->addClass('col-md-3');
          break;
      }    
    }

    if ($layout->id() === 'layout_threecol_section') {
      // Remove default layout class if needed.
      if (isset($variables['attributes']) && $variables['attributes'] instanceof \Drupal\Core\Template\Attribute) {
        $variables['attributes']->removeClass('layout--threecol-section');
      }

      switch ($variables['settings']['column_widths']) {
        case '33-34-33':
          $variables['region_attributes']['first']->addClass('col-md-4');
          $variables['region_attributes']['second']->addClass('col-md-4');
          $variables['region_attributes']['third']->addClass('col-md-4');
          break;

        case '25-50-25':
          $variables['region_attributes']['first']->addClass('col-md-3');
          $variables['region_attributes']['second']->addClass('col-md-6');
          $variables['region_attributes']['third']->addClass('col-md-3');
          break;

        case '25-25-50':
          $variables['region_attributes']['first']->addClass('col-md-3');
          $variables['region_attributes']['second']->addClass('col-md-3');
          $variables['region_attributes']['third']->addClass('col-md-6');
          break;

        case '50-25-25':
          $variables['region_attributes']['first']->addClass('col-md-6');
          $variables['region_attributes']['second']->addClass('col-md-3');
          $variables['region_attributes']['third']->addClass('col-md-3');
          break;

        default:
          $variables['region_attributes']['first']->addClass('col-md-4');
          $variables['region_attributes']['second']->addClass('col-md-4');
          $variables['region_attributes']['third']->addClass('col-md-4');
          break;
      }
    }

    if ($layout->id() === 'layout_fourcol_section') {
      // Remove default layout class if needed.
      if (isset($variables['attributes']) && $variables['attributes'] instanceof \Drupal\Core\Template\Attribute) {
        $variables['attributes']->removeClass('layout--fourcol-section');
      }
      
      $variables['region_attributes']['first']->addClass('col-md-3');
      $variables['region_attributes']['second']->addClass('col-md-3');
      $variables['region_attributes']['third']->addClass('col-md-3');
      $variables['region_attributes']['fourth']->addClass('col-md-3');
      
    }
  } 
}
